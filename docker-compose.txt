version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  # kafka brokers
  kafka_broker_1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_broker_1
    ports:
      - "9091:9091"
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

      # Uniquely identify each broker in a Kafka cluster.
      KAFKA_BROKER_ID: 1
      # Name of zookeeper where broker should connect
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      # Mapping between listener names and the security protocols they use
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      # INTERNAL: inside and EXTERNAL: outside
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka_broker_1:9091,EXTERNAL://localhost:9092
      # Communication between different Kafka brokers in a cluster
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      # For logger
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      # Replication Topic on the all brokers(no of brokers -1)
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    networks:
      - kafka-network

  kafka_broker_2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_broker_2
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
      - kafka_broker_1 # For docker netwoek IPV4 consistency
    environment:
      KAFKA_BROKER_ID: 2
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka_broker_2:9093,EXTERNAL://localhost:39093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    networks:
      - kafka-network

  kafka_broker_3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_broker_3
    ports:
      - "9094:9094"
      - "9093:9093"

    depends_on:
      - zookeeper
      - kafka_broker_2 # For docker netwoek IPV4 consistency
    environment:
      KAFKA_BROKER_ID: 3
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka_broker_3:9093,EXTERNAL://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    networks:
      - kafka-network

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    depends_on:
      - kafka_broker_1
      - kafka_broker_2
      - kafka_broker_3
    ports:
      - 8090:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - kafka-network

networks:
  kafka-network:
    external: true
    driver: bridge
    name: kafka-network
    ipam:
      config:
        - subnet: "172.20.0.0/24"
