version: "3.7"
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    # user: root
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    # volumes:
    #   - "./storage/zookeeper/data:/var/lib/zookeeper/data"
    #   - "./storage/zookeeper/log:/var/lib/zookeeper/log"
    #   - "./storage/zookeeper/secrets:/var/lib/zookeeper/secrets"
    networks:
      - kafka_network

  kafka_broker_1:
    container_name: kafka_broker_1
    image: confluentinc/cp-kafka:latest
    # user: root
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      # - KAFKA_AUTO_CREATE_TOPICS_ENABLE= "true"
      # Uniquely identify each broker in a Kafka cluster.
      - KAFKA_BROKER_ID=1
      # Name of zookeeper where broker should connect
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      # Mapping between listener names and the security protocols they use
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      # INTERNAL: inside and EXTERNAL: outside
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka_broker_1:9092,EXTERNAL://localhost:9093
      # Kafka listeners URL
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      # Communication between different Kafka brokers in a cluster
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      # For logger
      - KAFKA_LOG4J_LOGGERS= "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      # Replication Topic on the all brokers(no of brokers -1)
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=2

    # restart: always
    depends_on:
      - zookeeper
    # volumes:
    #   - "./storage/kafka/data_1:/var/lib/kafka/data"
    #   - "./storage/kafka/secrets_1:/var/lib/kafka/secrets"
    networks:
      - kafka_network

  kafka_broker_2:
    container_name: kafka_broker_2
    image: confluentinc/cp-kafka:latest
    # user: root
    ports:
      - "9094:9094"
      - "9095:9095"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka_broker_2:9094,EXTERNAL://localhost:9095
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9094,EXTERNAL://0.0.0.0:9095
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_LOG4J_LOGGERS= "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    # restart: always
    depends_on:
      - zookeeper
    # volumes:
    #   - "./storage/kafka/data_2:/var/lib/kafka/data"
    #   - "./storage/kafka/secrets_2:/var/lib/kafka/secrets"
    networks:
      - kafka_network

  kafka_broker_3:
    container_name: kafka_broker_3
    image: confluentinc/cp-kafka:latest
    # user: root
    ports:
      - "9096:9096"
      - "9097:9097"
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka_broker_3:9096,EXTERNAL://localhost:9097
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9096,EXTERNAL://0.0.0.0:9097
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_LOG4J_LOGGERS= "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    # restart: always
    depends_on:
      - zookeeper
    # volumes:
    #   - "./storage/kafka/data_3:/var/lib/kafka/data"
    #   - "./storage/kafka/secrets_3:/var/lib/kafka/secrets"
    networks:
      - kafka_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=my-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka_broker_1:9092,kafka_broker_2:9094,kafka_broker_3:9096
      - KAFKA_CLUSTERS_0_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - kafka_broker_1
      - kafka_broker_2
      - kafka_broker_3
    restart: always
    networks:
      - kafka_network

  # mongo:
  #   container_name: mongo
  #   image: mongo
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   networks:
  #     - kafka_network

networks:
  kafka_network:
    # name: pub_sub_network
    # driver: bridge
    external: true
